<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MetroPanel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABIBJREFUaEPt
        mluIVWUUxweJfIgolQwKovFFEHpQA8NpYkQlBkTx4dTcGedBULyAFES9DD2loqQV5BUvhDcYROihSPAh
        Ih3RyhnGy2gyJJM9aE6YdtHxtz7X3q3zne/MzD4z497S+cOffb7/unxr7bP35tuXiiSoq6t7obGx8VvY
        39TUtFblMQE555Ozt6Gh4UJ9ff3rKo8PmGQTEw4q7+VyuclqGjXId87kPqny+IAJ9pnJBtmD09U0apDv
        V5P7qsqlo6WlZUpzc/Mc9v6CiBxSL4uNCYKN4DPP+idhW1vb05q7oBH+8WesL/NVU99LYisKgl/D8QTb
        eyZhxPfUJ9gIv/+wehKSY5bmKGgE21yjWfZgqxefPNBtM8Z/PGfLrDUS8VPxc2Awg0bueg4+s9rIoPwJ
        4ltQXIgkfF98CdptdcbTNMefVk9CzsdXNccvRr8kGvNWG60YL4uvJLjmGQpIwTvEl23O6F3t7e0TOPle
        NFpiUuxbWsf2SGOej0XDtizShiI7o1IS/OsbAhyIrlxM8gbjla2trc/KmN9bjV8pPFlTU/OEkNwMG9+W
        HcQV60ka+dH4FSV+c6WQoNGnJn1FihfIxIw/gKGrXCKS+wBNTNLUctl9Dr3D9ytG2bkjbkT5N0FfM/Fh
        fv/s2UbLm1CKPwpvqTYiltJIJlluJGssN5I1hhoZ3/uAMQJXzY227nIjaaOkRtBkdTw7RJYt1dxfLwzZ
        LJl4cUgXkr+K7Zu+HpHYWbKK0HIcEjfCeKlnT4UUvllLckjcCAGrVP+J34d9og+ovSNkV55Sn+6ATXLc
        EDvFHPNtaMc19pCW5ICt5EbcjZUP9PNiZxn9lEoFIIdbijPZhyrlAdtpsXOIPq9SDGKjG6vxa0SW2eh9
        YqeI1SRbHiL2PZrjcw3NA3p6jci9CNoPakvC9ZoiBtojaeRd0dmegB9FJPA7L27EJH63zQX7Vf/E04X7
        xcZ8X2pJDujJGmE87P38I+LD+3JF4kYIWKd6B8722O8xMcIjUPZeAfHtZRv7Mv7C5JFz6Krq71hdbevV
        dkxLciilkeA5QmB0WXTkqjVVTQXAtsv6ErtCTQ5o6Z3s5UZguRGD/3UjG1SXR6KyJnIkMO+BN+P7bIsx
        9lPehnEuGD0g/N1oEd1ajvydWpJDKY1sVj2vEfgXtHFJKA+8ba5hG4FntSSHUhoJHlqMa2Fobw/HPnl5
        o2kc0NI7RwQEL0F3T+Hxu8L2cojYfmMrObo4Xyo1PAZ6uo0I0B+vZTzbnTjnvfsTYnPLeLgoZBeaSWW5
        UmBHvyh2fud8G1yjsaNrBIcVnj0VUvgBLckhcSP6gcBnBG4LEds3bL/3dUsm2ctW3qEf9G3Kr/DpDOgx
        ia3SkhzQkjWSVRRrJH5Rg8MZ9c00qHVLVLOySkT7DvFO9Iotq6itrZ1Ind2mZvlHpkkj/l3gdQxyOxo8
        XtMktckL07wmYPxWdyTv2TNLan/4nl0gA8ShvnzIKv/78iEC4lDfomSN4W9RLOTrIE74mfxLwYfKaTP8
        dVBFxQNcYfHPUreNrQAAAABJRU5ErkJggg==
</value>
  </data>
</root>